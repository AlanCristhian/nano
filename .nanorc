## Sample initialization file for GNU nano.
##
## For the options that take parameters, the default value is shown.
## Other options are unset by default.  To make sure that an option
## is disabled, you can use "unset <option>".
##
## Characters that are special in a shell should not be escaped here.
## Inside string parameters, quotes should not be escaped -- the last
## double quote on the line will be seen as the closing quote.

## Make 'nextword' (Ctrl+Right) and 'chopwordright' (Ctrl+Delete)
## stop at word ends instead of at beginnings.
set afterends

## When soft line wrapping is enabled, make it wrap lines at blanks
## (tabs and spaces) instead of always at the edge of the screen.
set atblanks

## Automatically indent a newly created line to the same number of
## tabs and/or spaces as the preceding line -- or as the next line
## if the preceding line is the beginning of a paragraph.
set autoindent

## Back up files to the current filename plus a tilde.
# set backup

## The directory to put unique backup files in.
# set backupdir "~/backups"

## Use bold text instead of reverse video text.
set boldtext

## Treat any line with leading whitespace as the beginning of a paragraph.
set bookstyle

## The characters treated as closing brackets when justifying paragraphs.
## This may not include any blank characters.  Only closing punctuation,
## optionally followed by these closing brackets, can end sentences.
set brackets "\"')>]}"

## Automatically hard-wrap the current line when it becomes overlong.
# set breaklonglines

## Do case-sensitive searches by default.
set casesensitive

## Constantly display the cursor position in the status bar or minibar.
set constantshow

## Use cut-from-cursor-to-end-of-line by default.
# set cutfromcursor

## Do not use the line below the title bar, leaving it entirely blank.
# set emptyline

## Set the target width for automatic hard-wrapping and for justifying
## paragraphs. If the specified value is 0 or less, the wrapping point
## will be the terminal's width minus this number.
# set fill -8

## Draw a vertical stripe at the given column, to help judge text width.
## (This option does not have a default value.)
set guidestripe 80

## Remember the used search/replace strings for the next session.
set historylog

## Display a "scrollbar" on the righthand side of the edit window.
# set indicator

## Scroll the buffer contents per half-screen instead of per line.
# set jumpyscrolling

## Display line numbers to the left (and any anchors in the margin).
set linenumbers

## Enable vim-style lock-files.  This is just to let a vim user know you
## are editing a file [s]he is trying to edit and vice versa.  There are
## no plans to implement vim-style undo state in these files.
# set locking

## Fall back to slow libmagic to try and determine an applicable syntax.
# set magic

## The opening and closing brackets that are found by a matching-bracket
## search.  This may not contain blank characters.  The opening brackets
## must come before the closing ones, and they must be in the same order.
set matchbrackets "(<[{)>]}"

## Suppress the title bar and show the filename plus a cursor-position
## percentage in the space of the status bar.
set minibar

## Enable mouse support, if available for your system.  When enabled,
## mouse clicks can be used to place the cursor, set the mark (with a
## double click), and execute shortcuts.  The mouse will work in the
## X Window System, and on the console when gpm is running.
set mouse

## Switch on multiple file buffers (inserting a file will put it into
## a separate buffer).
# set multibuffer

## Don't convert files from DOS/Mac format.
# set noconvert

## Don't display the helpful shortcut lists at the bottom of the screen.
set nohelp

## Don't automatically add a newline when a file does not end with one.
#set nonewlines

## Set operating directory.  nano will not read or write files outside
## this directory and its subdirectories.  Also, the current directory
## is changed to here, so any files are inserted from this dir.  A blank
## string means the operating-directory feature is turned off.
# set operatingdir ""

## Remember the cursor position in each file for the next editing session.
set positionlog

## Preserve the XON and XOFF keys (^Q and ^S).
# set preserve

## The characters treated as closing punctuation when justifying paragraphs.
## This may not contain blank characters.  Only these closing punctuations,
## optionally followed by closing brackets, can end sentences.
# set punct "!.?"

## Make status-bar messages disappear after 1 keystroke instead of after 20.
# set quickblank

## The regular expression that matches quoting characters in email
## or line-comment introducers in source code.  The default is:
# set quotestr "^([ 	]*([!#%:;>|}]|//))+"

## Try to work around a mismatching terminfo terminal description.
# set rawsequences

## Fix Backspace/Delete confusion problem.
# set rebinddelete

## Do regular-expression searches by default.
## Regular expressions are of the extended type (ERE).
# set regexp

## Save a changed buffer automatically on exit; don't prompt.
# set saveonexit

## (The old form of this option, 'set tempfile', is deprecated.)

## Put the cursor on the highlighted item in the file browser, and
## show the cursor in the help viewer; useful for people who use a
## braille display and people with poor vision.
# set showcursor

## Make the Home key smarter: when Home is pressed anywhere but at the
## very beginning of non-whitespace characters on a line, the cursor
## will jump to that beginning (either forwards or backwards).  If the
## cursor is already at that position, it will jump to the true start
## of the line (the left edge).
set smarthome

## Spread overlong lines over multiple screen lines.
set softwrap

## Use this spelling checker instead of the internal one.  This option
## does not have a default value.
# set speller "aspell -x -c"

## Use the end of the title bar for some state flags: I = auto-indenting,
## M = mark, L = hard-wrapping long lines, R = recording, S = soft-wrapping.
set stateflags

## Use this tab size instead of the default; it must be greater than 0.
set tabsize 4

## Convert each typed tab to the fitting number of spaces.
set tabstospaces

## Snip whitespace at the end of lines when justifying or hard-wrapping.
# set trimblanks

## Save files by default in Unix format (also when they were DOS or Mac).
set unix

## The two single-column characters used to display the first characters
## of tabs and spaces.  187 in ISO 8859-1 (0000BB in Unicode) and 183 in
## ISO-8859-1 (0000B7 in Unicode) seem to be good values for these.
## The default when in a UTF-8 locale:
set whitespace "❘⎵"
## The default otherwise:
# set whitespace ">."

## Detect word boundaries differently by treating punctuation
## characters as parts of words.
# set wordbounds

## The characters (besides alphanumeric ones) that should be considered
## as parts of words.  This option does not have a default value.  When
## set, it overrides option 'set wordbounds'.
set wordchars "_"

## Let an unmodified Backspace or Delete erase the marked region (instead
## of a single character, and without affecting the cutbuffer).
set zap

## Hide the bars plus help lines and use the whole terminal as edit area.
# set zero

## Paint the interface elements of nano.  These are examples; there are
## no colors by default, except for errorcolor and spotlightcolor.
set titlecolor white,black
set promptcolor lightblack,lightcyan
set statuscolor white,lightblack
set errorcolor black,lightred
set spotlightcolor lightblack,lightyellow
set selectedcolor lightblack,blue
set stripecolor brightblack
set scrollercolor lightblack,black
set numbercolor lightwhite
set keycolor cyan
set functioncolor green

## === Syntax coloring ===
## For all details, see 'man nanorc', section SYNTAX HIGHLIGHTING.

include "/usr/share/nano/*.nanorc"
include "~/.nano/*.nanorc"
include "~/rep/thorns/*.nanorc"

## === Key bindings ===

## For all details, see 'man nanorc', section REBINDING KEYS.

## If you want to suspend nano with one keystroke (instead of with ^T^Z):
# bind ^Z suspend main

## The <Ctrl+Delete> keystroke deletes the word to the right of the cursor.
## On some terminals the <Ctrl+Backspace> keystroke produces ^H, which is
## the ASCII character for backspace, so it is bound by default to the
## backspace function.  The <Backspace> key itself produces a different
## keycode, which is hard-bound to the backspace function.  So, if you
## normally use <Backspace> for backspacing and not ^H, you can make
## <Ctrl+Backspace> delete the word to the left of the cursor with:
bind ^H chopwordleft main

## For a more mnemonic Comment keystroke (overriding Cut-from-cursor):
# bind M-K comment main

## If you want ^L to just refresh the screen and not center the cursor:
# bind ^L refresh main

## When you sometimes type M-J instead of M-K, or M-T instead of M-R:
# unbind M-J main
# unbind M-T main
## (Those functions are still accessible through ^T^J and ^T^V.)

## For quickly uppercasing or lowercasing the word under the cursor.
## (These effectively do a Ctrl+Right followed by a Shift+Ctrl+Left,
## and then pipe the selected text through a sed command.)
unbind M-L main

bind Sh-M-U "{nextword}{mark}{prevword}{execute}|sed 's/.*/\U&/'{enter}" main
bind M-U "{nextword}{mark}{prevword}{execute}|sed 's/.*/\U&/'{enter}" main

bind Sh-M-L "{nextword}{mark}{prevword}{execute}|sed 's/.*/\L&/'{enter}" main
bind M-L "{nextword}{mark}{prevword}{execute}|sed 's/.*/\L&/'{enter}" main

## If you would like nano to have keybindings that are more "usual",
## such as ^O for Open, ^F for Find, ^H for Help, and ^Q for Quit,
## then uncomment |sed 's/.*/\L&/'

## Unbind weird behaviour
#unbind F2 main
#unbind F3 main
#unbind F4 main
#unbind F5 main
#unbind F6 main
#unbind F7 main
#unbind F8 main
#unbind F9 main
#unbind F12 main
#unbind Ins all
#unbind ^A all  # home
#unbind ^D all
#unbind ^K all  # cut
#unbind ^O all
#unbind ^Q all  # search backward
#unbind ^R all  # insert new file
#unbind ^T all  # execute command
#unbind ^W all  # whereis
#unbind ^X all
#unbind ^Y all  # one page up
#unbind ^\ all  # replace
#unbind ^] all  # autocomplete
#unbind ^Space all
#unbind M-E main  # undo
#unbind M-M main  # disable mouse
#unbind M-N main  # disable linenumbers
#unbind M-G all  # goto
#unbind M-J all  # justify paragraph or regionc
#unbind M-3 all  # comment/uncomment line/region
#unbind M-] all  # go to the matching bracket
#unbind M-R main  # replace
#unbind M-Q main  # search next occurence backward
#unbind M-T main  # cut from cursor to end
#unbind M-W main  # search next occurence forward
#unbind M-Y main # disable color syntax


## ========================
## Make my own key bindings
## ========================


#bind ^I indent main
bind ^W exit main
bind ^W exit help

bind M-F findnext main
bind M-F findnext help
bind M-F findnext browser

bind ^B wherewas main
bind ^B wherewas help
bind ^B wherewas browser

bind M-B findprevious main
bind M-B findprevious help
bind M-B findprevious browser

bind ^Z undo main
bind ^Y redo main
bind ^/ comment main
bind ^L linter main
bind M-. recordmacro main
bind M-, runmacro main
bind M-} findbracket main  # go to the matching bracket
bind ^K suspend main
#bind F6 speller main

## ========================
## Bind copy, cut and paste
## ========================

## MAIN: copy, cut and paste
bind Sh-M-X cut all
bind Sh-M-C copy all
bind Sh-M-V paste all
bind ^C "{cut}{mark}{paste}{execute}|~/.nano/clp{enter}{undo}{undo}{undo}" main
bind ^X "{cut}{mark}{paste}{execute}|~/.nano/clp{enter}{undo}{undo}" main
bind ^V "{execute}~/.nano/clp{enter}" main

## SEARCH: paste
bind ^F whereis main
bind ^F whereis help
bind ^F whereis browser
bind ^V "{cancel}{mark}{execute}~/.nano/clp{enter}{cut}{undo}{undo}{whereis}{paste}" search

## REPLACE: paste
bind ^R replace main
bind ^V "{cancel}{mark}{execute}~/.nano/clp{enter}{cut}{undo}{undo}{replace}{paste}" replace

## REPLACEWITH: paste
bind ^V "{cancel}{mark}{execute}~/.nano/clp{enter}{cut}{undo}{undo}{replace}{enter}{paste}" replacewith

## GOTOLINE: paste
bind ^G gotoline main
bind ^V "{cancel}{mark}{execute}~/.nano/clp{enter}{cut}{undo}{undo}{gotoline}{paste}" gotoline

## WRITEOUT: paste
bind M-S writeout main
bind ^V "{cancel}{mark}{execute}~/.nano/clp{enter}{cut}{undo}{undo}{writeout}{paste}" writeout

## OPEN EXISTENT FILE
## ==================

# INSERT: Open file in new buffer and paste
bind F1 help browser
unbind M-\ browser
unbind M-/ browser
unbind ^P browser
unbind ^N browser
unbind ^Y browser
unbind ^V browser
bind ^O "{insert}{flipnewbuffer}" main
bind ^C "{exit}{cancel}" browser
bind ^W "{exit}{cancel}" browser
bind ^W "{cancel}{exit}{cancel}" whereisfile
bind ^G gotodir browser

# Paste in browser search
bind ^V "{cancel}{exit}{cancel}{mark}{execute}~/.nano/clp{enter}{cut}{undo}{undo}{insert}{flipnewbuffer}{browser}{whereis}{paste}" whereisfile

## EXECUTE: paste
bind ^E execute main
bind ^V "{cancel}{mark}{execute}~/.nano/clp{enter}{cut}{undo}{undo}{execute}{paste}" execute
bind ^W cancel execute

## Open a new void and unnamed buffer
bind ^N "{execute}{flipnewbuffer}echo -n{enter}" main

## Duplicate line
bind ^D "{copy}{paste}{up}{end}" main

## Select all
bind ^A "{firstline}{home}{mark}{lastline}{end}" main

## Remove trailing whitespace on save
bind ^S savefile main
bind F10 "{execute}|sed 's/\s\+$//'{enter}" main

## Snippet
bind M-R "{mark}{prevword}{execute}|~/.nano/nano_snippets{enter}{home}{whereis}%%{enter}{mark}{right}{right}{delete}" main
bind M-N "{whereis}%%{enter}{mark}{right}{right}{delete}" main

## math on selectec text
bind M-M "{cut}{execute}~/.nano/math {paste}{enter}" main

## sort lines
bind F2 "{cut}{mark}{paste}{execute}|sort -f|uniq{enter}{backspace}" main

## reverse order
bind F3 "{cut}{mark}{paste}{execute}|sort -f -r|uniq{enter}{backspace}" main

## Move line up
bind Sh-M-K "{end}{mark}{home}{home}{cut}{delete}{up}{enter}{up}{paste}" main

## Move line down
bind Sh-M-J "{end}{mark}{home}{home}{cut}{delete}{end}{enter}{paste}" main

## Open and autoclose curly braces
bind M-{ "{{}}{left}{enter}{up}{end}{enter}{indent}" main

# - Autocomplete command line.
# - Autoclose bracket.
# - Keyword name instead color name.
# - System copy and paste.
# - Comma separated menus.
# - If ^I are binding to indent and complete first try to complete, if fail,
#   indent.
# - Mouse scroll without moving the cursor.
# - In zero interface, file name shows less than 1.5 seconds.
# - When selected, delete text after press any character.
# - There is no wherewasfile menu. There is no way to bind a key on the search backward menu in the file browser.
# - bind ^I "	" make nano hang.
# - Comment that curses should be installed. libncurses-dev
# - Add whitespacecolor.
# - man 5 nano doesn't work.
# - Interpret 4 spaces as tab when show whitespaces.
